{"version":3,"sources":["layout/Header.jsx","layout/Footer.jsx","components/Movie.jsx","components/Movies.jsx","245.png","components/Preloader.jsx","components/Search.jsx","layout/Main.jsx","App.jsx","index.js"],"names":["Header","className","class","href","id","Footer","Date","getFullYear","Movie","props","title","Title","year","Year","imdbID","type","Type","poster","Poster","src","Movies","movies","length","map","m","key","Preloader","preloader","alt","Search","state","search","updateSearch","event","s","updateMovies","handleFilter","setState","target","dataset","placeholder","value","this","onChange","e","onKeyDown","action","name","data-type","checked","React","Component","API_KEY","process","Main","loading","componentDidMount","fetch","then","responce","json","data","catch","err","console","error","App","posts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d32a034e.chunk.js","sourcesContent":["const Header = () => {\r\n    return(\r\n       <div>         \r\n        <nav className='purple darken-2'>\r\n            <div class=\"nav-wrapper\">\r\n            <a href=\"#\" class=\"brand-logo\">Movies</a>\r\n            <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\r\n                <li><a href=\"https://github.com/athlete94\">Github</a></li>\r\n            </ul>\r\n            </div>\r\n        </nav>\r\n        \r\n       </div> \r\n    )\r\n}\r\n\r\nexport default Header","const Footer = () => {\r\n    return(  \r\n    <footer class=\"page-footer purple lighten-3\">\r\n    <div class=\"footer-copyright purple darken-1\">\r\n      <div class=\"container\">\r\n      © {new Date().getFullYear() } Copyright Text\r\n      <a class=\"grey-text text-lighten-4 right\" href=\"https://github.com/athlete94\">GitHub</a>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n        \r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\";\r\n\r\nconst Movie = (props) => {\r\n\r\n    const {\r\n        Title: title,\r\n        Year: year,\r\n        imdbID: id,\r\n        Type: type,\r\n        Poster: poster\r\n    } = props\r\n\r\n    return  <div id={id} className=\"card\">\r\n        <div className=\"card-image waves-effect waves-block waves-light\">\r\n            {poster === 'N/A' ? <img src={`https://via.placeholder.com/150x210.png?text=${title}`} />\r\n            : <img className=\"activator\" src={poster} /> \r\n        }\r\n            \r\n        </div>\r\n        <div className=\"card-content\">\r\n            <span className=\"card-title activator grey-text text-darken-4\">{title}</span>\r\n            <p>{year} <span className='right'>{type}</span></p>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Movie","import React from \"react\";\r\nimport Movie from \"./Movie\";\r\n\r\nconst Movies = (props) => {\r\n    const {movies = []} = props\r\n\r\n    return (\r\n        <div className='movies'>\r\n            {movies.length ? \r\n                movies.map(m => <Movie {...m} key={m.imdbID}/>) \r\n                : <h4>Nothing found</h4>} {/* {...m} - передача всех параметров  */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movies","export default __webpack_public_path__ + \"static/media/245.ecffabde.png\";","import preloader from \"../245.png\"\r\n\r\nconst Preloader = () => {\r\n    return(\r\n        <div className='preloader'>   \r\n            <img src={preloader} alt=\"preloader\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React from \"react\"\r\n\r\nclass Search extends React.Component {\r\n\r\n    state = {\r\n        search: '',\r\n        type: 'all'\r\n    }\r\n\r\n    updateSearch = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            let s = this.state.search\r\n            let type = this.state.type\r\n\r\n            this.props.updateMovies(s, type)\r\n        }\r\n        \r\n    }\r\n\r\n    handleFilter = (event) => {\r\n        this.setState(() => ({type: event.target.dataset.type }),\r\n            () => {this.props.updateMovies(this.state.search, this.state.type)})\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        return <div class=\"row\">\r\n\r\n        {/* Search */}\r\n        <div class=\"input-field col s12\">\r\n          <input \r\n            className=\"validate\"\r\n            id=\"search\"\r\n            type=\"search\"\r\n            placeholder=\"search\"\r\n            value={this.state.search} \r\n            onChange={(e) => this.setState({search: e.target.value})}\r\n            onKeyDown={this.updateSearch} />\r\n        </div>\r\n\r\n        {/* Filter */}\r\n        <form action=\"#\">\r\n            <label>\r\n                <input \r\n                    className=\"with-gap\"\r\n                    name=\"type\"\r\n                    type=\"radio\"\r\n                    data-type=\"all\"\r\n                    onChange={this.handleFilter}\r\n                    checked={this.state.type === \"all\"}/> {/*если в state type: all то checked*/}\r\n                <span>All</span>\r\n            </label>\r\n            <label>\r\n                <input \r\n                    className=\"with-gap\" \r\n                    name=\"type\" \r\n                    type=\"radio\" \r\n                    data-type=\"movie\" \r\n                    onChange={this.handleFilter}\r\n                    checked={this.state.type === \"movie\"}/>\r\n                <span>Movies</span>\r\n            </label>\r\n            <label>\r\n                <input \r\n                    className=\"with-gap\" \r\n                    name=\"type\" \r\n                    type=\"radio\" \r\n                    data-type=\"series\" \r\n                    onChange={this.handleFilter}\r\n                    checked={this.state.type === \"series\"}/>\r\n                <span>Serias</span>\r\n            </label>\r\n        </form>\r\n\r\n        \r\n      </div>\r\n    }\r\n}\r\n\r\nexport default Search","import Movies from \"../components/Movies\"\r\nimport React from \"react\" \r\nimport Preloader from '../components/Preloader'\r\nimport Search from \"../components/Search\"\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY\r\n\r\nclass Main extends React.Component {\r\n    state = {\r\n        movies: [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&s=matrix`)\r\n        .then(responce => responce.json())\r\n        .then(data => this.setState({movies: data.Search, loading: false}))\r\n        .catch((err) => {\r\n            console.error(err)\r\n            this.setState({loading: false})\r\n        })\r\n    }\r\n \r\n    updateMovies = (s, type) => {\r\n        this.setState({loading: true})\r\n        fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&s=${s}${type !== 'all' ? `&type=${type}` : ''}`)\r\n        .then(responce => responce.json())\r\n        .then(data => this.setState({movies: data.Search, loading: false}))\r\n        .catch((err) => {\r\n            console.error(err)\r\n            this.setState({loading: false})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <main className='container content'>\r\n                <Search updateMovies={this.updateMovies} />\r\n\r\n                {this.state.loading ? <Preloader />\r\n                : <Movies movies={this.state.movies} />}\r\n                \r\n            </main>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","import Header from './layout/Header'\nimport Footer from './layout/Footer'\nimport Main from './layout/Main'\nimport React from 'react'\n\nclass App extends React.Component {\n\n  componentDidMount = () => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n    .then(responce => responce.json())\n    .then(data => this.setState({posts: data, loading: false}))\n  }\n\n  render () {\n    return (\n      <>\n        <Header />\n        <Main />\n        <Footer />\n      </>\n    );\n  }  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}